version: '3.7'
services:

  eureka-serviceregistry:
    build: ./EurekaServer
    container_name: eurekaServerRegistry
    restart: on-failure
    networks:
      - xml
    ports:
      - "8761:8761"

  eureka-oglas-service:
    build: ./OglasService
    container_name: eurekaOglasService
    restart: on-failure
    networks:
      - xml
    ports:
      - "8092:8092"
    links:
      - postgresql-oglas
    environment:
      REGISTRY_HOST: eureka-serviceregistry
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: postgresql-oglas
      DATABASE_SCHEMA: oglas
    depends_on:
      - eureka-serviceregistry

  eureka-authorization-service:
    build: ./AuthorizationService
    container_name: eurekaAuthorizationService
    restart: on-failure
    networks:
      - xml
    ports:
      - "8095:8095"
    links:
      - postgresql-mikros
    environment:
      REGISTRY_HOST: eureka-serviceregistry
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: postgresql-mikros
      DATABASE_SCHEMA: mikros
    depends_on:
      - eureka-serviceregistry

  eureka-zahtev-service:
    build: ./ZahtevService
    container_name: eurekaZahtevService
    restart: on-failure
    networks:
      - xml
    ports:
      - "8093:8093"
    links:
      - postgresql-zahtev
    environment:
      REGISTRY_HOST: eureka-serviceregistry
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: postgresql-zahtev
      DATABASE_SCHEMA: zahtev
    depends_on:
      - eureka-serviceregistry

  admin:
    build: ./AdminService
    container_name: eurekaAdminServer
    restart: on-failure
    networks:
      - xml
    ports:
      - "8094:8094"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry

  agentvehicle:
    build: ./AgentVehicleService
    container_name: eurekaAgentVehicleServer
    restart: on-failure
    networks:
      - xml
    ports:
      - "8096:8096"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry

  profil:
    build: ./ProfileService
    container_name: eurekaProfileService
    restart: on-failure
    networks:
      - xml
    ports:
      - "8101:8101"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry

  commentrating:
    build: ./CommentRatingService
    container_name: eurekaCommentRatingServer
    restart: on-failure
    networks:
      - xml
    ports:
      - "8097:8097"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry

  mail:
    build: ./MailService
    container_name: eurekaMailServer
    restart: on-failure
    networks:
      - xml
    ports:
      - "8098:8098"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry

  message:
    build: ./MessageService
    container_name: eurekaMessageServer
    restart: on-failure
    networks:
      - xml
    ports:
      - "8099:8099"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry

  search:
    build: ./SearchService
    container_name: eurekaSearchServer
    restart: on-failure
    networks:
      - xml
    ports:
      - "8100:8100"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry

  gateway-service:
    build: ./GatewayService
    container_name: gatewayService
    restart: on-failure
    networks:
      - xml
    ports:
      - "8662:8662"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    depends_on:
      - eureka-serviceregistry
      - eureka-oglas-service
      - eureka-zahtev-service
      - eureka-authorization-service
      
  postgresql-oglas:
    image: postgres
    container_name: postgresql-oglas
    restart: always
    networks:
      - xml
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: oglas
    ports:
      - 5432:5432

  postgresql-zahtev:
    image: postgres
    container_name: postgresql-zahtev
    restart: always
    networks:
      - xml
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: zahtev
    ports:
      - 5433:5432

  postgresql-mikros:
    image: postgres
    container_name: postgresql-mikros
    restart: always
    networks:
      - xml
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: mikros
    ports:
      - 5434:5432

networks:
  xml:
    name: xml
    driver: bridge






